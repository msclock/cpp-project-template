# To use:
#
#     pre-commit run -a
#
# Or:
#
#     pre-commit install  # (runs every time you commit in git)
#
# To update this file:
#
#     pre-commit autoupdate
#
# See https://github.com/pre-commit/pre-commit

fail_fast: false
exclude: |
  (?x)(
    ^(3rdParty/.*) |
    ^.*\.drawio
  )
files: '' # set '' as default

repos:
  # Standard hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: "v4.3.0"
    hooks:
      - id: check-added-large-files
        args: ['--maxkb=4096']
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-merge-conflict
      - id: check-symlinks
      - id: check-toml
      - id: check-yaml
      - id: debug-statements
      - id: end-of-file-fixer
      - id: mixed-line-ending
      - id: requirements-txt-fixer
      - id: trailing-whitespace

  # Upgrade old Python syntax
  - repo: https://github.com/asottile/pyupgrade
    rev: "v2.37.3"
    hooks:
      - id: pyupgrade
        args: [--py37-plus]

  # Nicely sort includes
  - repo: https://github.com/PyCQA/isort
    rev: "5.10.1"
    hooks:
      - id: isort

  # Black, the code formatter, natively supports pre-commit
  - repo: https://github.com/psf/black
    rev: "22.6.0" # Keep in sync with blacken-docs
    hooks:
      - id: black

  # Also code format the docs
  - repo: https://github.com/asottile/blacken-docs
    rev: "v1.12.1"
    hooks:
      - id: blacken-docs
        additional_dependencies:
          - black==22.6.0 # keep in sync with black hook

  # Changes tabs to spaces
  - repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: "v1.3.1"
    hooks:
      - id: remove-tabs

  # Autoremoves unused imports
  - repo: https://github.com/hadialqattan/pycln
    rev: "v2.1.1"
    hooks:
      - id: pycln
        stages: [manual]

  # Checking for common mistakes
  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: "v1.9.0"
    hooks:
      - id: python-check-blanket-noqa
      - id: python-check-blanket-type-ignore
      - id: python-no-log-warn
      - id: python-use-type-annotations

  # Automatically remove noqa that are not used
  - repo: https://github.com/asottile/yesqa
    rev: "v1.4.0"
    hooks:
      - id: yesqa
        additional_dependencies: &flake8_dependencies
          - flake8-bugbear
          - pep8-naming

  # Flake8 also supports pre-commit natively (same author)
  - repo: https://github.com/PyCQA/flake8
    rev: "5.0.4"
    hooks:
      - id: flake8
        exclude: ^(docs/.*|tools/.*)$
        additional_dependencies: *flake8_dependencies
        args:
          - --max-line-length=120
          - --show-source
          - --exclude=.git, __pycache__, build, dist, docs, tools, venv, .venv
          - --extend-ignore=E203, E722, B950
          - --extend-select=B9

  # PyLint has native support - not always usable, but works for us
  - repo: https://github.com/PyCQA/pylint
    rev: "v2.14.5"
    hooks:
      - id: pylint

  # CMake formatting
  - repo: https://github.com/cheshirekow/cmake-format-precommit
    rev: "v0.6.13"
    hooks:
      - id: cmake-format
        additional_dependencies: [pyyaml]
        types: [file]
        files: (\.cmake|CMakeLists.txt)(.in)?$

  # Check static types with mypy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: "v0.971"
    hooks:
      - id: mypy
        args: []
        exclude: ^(tests|docs|setup.py)/
        additional_dependencies: [nox, rich]

  # Check for spelling
  - repo: https://github.com/codespell-project/codespell
    rev: "v2.2.1"
    hooks:
      - id: codespell
        args:
          - --skip="3rdParty/"
          - --ignore-words-list="Transer,transer,axises,pres,seh,SEH,indexs,indexS"
          - --check-filenames

  # Check for common shell mistakes
  - repo: https://github.com/msclock/shellcheck-py
    rev: "v0.0.2"
    hooks:
      - id: shellcheck

  # Clang format the codebase automatically
  - repo: https://github.com/pre-commit/mirrors-clang-format
    rev: "v14.0.6"
    hooks:
      - id: clang-format
        types_or: [c++, c, cuda]

  # Commitizen is a tool designed that obeys a standard way of committing rules.
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v2.32.1
    hooks:
      - id: commitizen
      - id: commitizen-branch
        stages: [push]
