name: Renovate

on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: '*/15 0-3 * * 1'
  workflow_dispatch:

jobs:
  renovate:
    container:
      env:
        LOG_LEVEL: debug
        RENOVATE_ALLOWED_POST_UPGRADE_COMMANDS: '["^git", "^pip", "^copier", "^find"]'
        RENOVATE_BRANCH_PREFIX: renovate-github/
        RENOVATE_ENABLED: {{ '${{ vars.RENOVATE_ENABLED || true }}' }}
        RENOVATE_ENABLED_MANAGERS: '["pep621", "github-actions", "regex", "pre-commit"]'
        RENOVATE_OPTIMIZE_FOR_DISABLED: 'true'
        RENOVATE_PLATFORM: github
        RENOVATE_REPOSITORIES: '["{{ '${{ github.repository }}' }}"]'
        RENOVATE_REPOSITORY_CACHE: enabled
      image: ghcr.io/renovatebot/renovate:37.270.0-full@sha256:a7c8636af30738eb04eff442ed4cf1cbb8566a9fb825e13b50424d89759db501
      options: --user root
    runs-on: ubuntu-22.04
    steps:
      - run: env | sort
      - id: generate-token
        name: Generate a token with GitHub App if App ID exists
        if: vars.BOT_APP_ID
        uses: actions/create-github-app-token@78e5f2ddc08efcb88fbbee6cfa3fed770ba550c3 # v1
        with:
          app-id: {{ '${{ vars.BOT_APP_ID }}' }}
          private-key: {{ '${{ secrets.BOT_PRIVATE_KEY }}' }}
      - name: Run Renovate
        env:
          RENOVATE_TOKEN: {{ '${{ steps.generate-token.outputs.token || secrets.RENOVATE_TOKEN }}' }}
          RENOVATE_GIT_AUTHOR: {{ '${{ vars.RENOVATE_GIT_AUTHOR }}' }}
        run: |
          if [ -n "{{ '${{ steps.generate-token.outputs.token }}' }}" ]; then
            unset RENOVATE_GIT_AUTHOR
            export RENOVATE_USERNAME="{{ '${{ steps.generate-token.outputs.app-slug }}' }}[bot]"
          fi

          if [ -z "$RENOVATE_TOKEN" ]; then
            echo "RENOVATE_TOKEN is not properly configured, skipping ..."
          else
            renovate $RENOVATE_EXTRA_FLAG
          fi
